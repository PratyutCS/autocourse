[{"filename":"1737095808CourseHandout(Seminar Case Study Bactch 2021-25).pdf","done":1,"Program":"CSE","course_name":"Seminar/Case Studies","course_description":"The main objective of this course is to introduce students to different data structures and illustrate their effective use in solving technical and logical problems. The course comprehensively explores different problem-solving techniques and skills. Proficiency in problem-solving skills is a fundamental expectation for any competent developer, as these concepts are commonly assessed by reputable companies during the screening process for software developer positions. \\n\\nThe primary emphasis will be on achieving a deep understanding of data structures, their implementation, practical applications through problem-solving scenarios, exploring various programming paradigms, algorithm analysis, and the practical application of different data structures and algorithms. This course explores the fundamental workings of algorithms and data structures, which lie at its core essence.","Course Syllabus":[{"srNo":1,"content":"Linear Search, Maximum in an Array, Sorting(Selection, Bubble and Insertion), Binary search ,Kadane's Algo- O(N), Merge two sorted arrays, Rotate Array anti clock wise by k times ,Unique Number-1, and tell about bitwise operators","co":"1","sessions":5},{"srNo":2,"content":"Basics of strings, String methods, String builder, Mutable and Immutable concepts, 2D Arrays: Wave Print, Spiral Print, and Transpose","co":"1","sessions":5},{"srNo":3,"content":"Recursion :Factorial, Fibonacci, isArraySorted, SumofArray, Print Numbers \\u2013 1) Increasing Order 2) Decreasing Order, MergeSort, Subsequence, Rat in Maze, N_Stairs, Subset Sum","co":"1","sessions":8},{"srNo":4,"content":"Stack :stack implementation Queue implementation , Linkedlist implementation(Add and Delete), Mid (Cycle detection hints) Reverse LinkedList ,Merge two Sorted LinkedList, Intersection of two LinkedList","co":"2","sessions":3},{"srNo":5,"content":"Binary Tree implementation and traversal of binary tree(PreOrder , InOrder and PostOrder), DIameter-O(N^2) and O(N) height , count number of node, Level-Order , Create Tree using Pre and Inorder, Create Tree using level-order","co":"2","sessions":4},{"srNo":6,"content":"Binary Search Tree implementation , Addition and Deletion, BST to LinkedList, Balanced binary Tree, Valid BST, priority queue Collections , Kth Samllest, Meeting Room-2 Merge k Sorted List, Map and Set Collections( HashMap TreeMap and LinkedHashMap) SubArray using Map related Question","co":"3","sessions":5},{"srNo":7,"content":"Dynamic Programming:- Fib, min Steps to one, coin Changes, ,LCS, LIS, knapsack Edit Distance, Graph basic , BFS, DFS,Dijkstra, MST(Prims) bipartite","co":"3","sessions":4}],"Learning Resources":{"textBooks":["Cracking the Coding Interview by Gayle Laakmann McDowell","Coding Interview Questions by Narasimha Karumanchi"],"referenceLinks":["Data Structures and Algorithms Specialization","NPTEL Data Structures And Algorithms, IIT Delhi"]},"internalAssessmentData":{"components":{"component1":{"component":"Class Participation","duration":"","weightage":"10%","evaluationWeek":"Continuous","remarks":"Experiential Based on discussion Learning"},"component2":{"component":"Project Phase Formulation of a problem, Evaluation -1","duration":"","weightage":"20%","evaluationWeek":"Continuous","remarks":"Experiential Learning"},"component3":{"component":"Quiz/Assignment","duration":"60 Mins","weightage":"30%","evaluationWeek":"Week 8","remarks":"Subjective/Coding based"},"component4":{"component":"End Term Project-Based (Panel Evaluation (Per student))","duration":"20-30 Mins","weightage":"40%","evaluationWeek":"As per date-sheet","remarks":"Project-Based (Panel Evaluation (Per student))"}}},"copoMappingData":{"courseOutcomes":{"CO1":{"description":"","bullets":[]},"CO2":{"description":"","bullets":[]},"CO3":{"description":"","bullets":[]}},"mappingData":{"CO1":{"PO1":"3","PO2":"3","PO3":"2","PO4":"","PO5":"","PO6":"","PO7":"","PO8":"","PO9":"","PO10":"","PO11":"","PO12":"","PSO1":"","PSO2":"","PSO3":"","PSO4":""},"CO2":{"PO1":"2","PO2":"3","PO3":"2","PO4":"2","PO5":"","PO6":"","PO7":"","PO8":"","PO9":"","PO10":"","PO11":"","PO12":"","PSO1":"","PSO2":"","PSO3":"","PSO4":""},"CO3":{"PO1":"3","PO2":"3","PO3":"3","PO4":"2","PO5":"","PO6":"","PO7":"","PO8":"","PO9":"","PO10":"","PO11":"","PO12":"","PSO1":"","PSO2":"","PSO3":"","PSO4":""}}},"actionsForWeakStudentsData":[""],"course_code":"","Module/Semester":"","Session":"","course_syllabus":[{"srNo":1,"content":"Linear Search, Maximum in an Array, Sorting(Selection, Bubble and Insertion), Binary search ,Kadane's Algo- O(N), Merge two sorted arrays, Rotate Array anti clock wise by k times ,Unique Number-1, and tell about bitwise operators","co":"1","sessions":5},{"srNo":2,"content":"Basics of strings, String methods, String builder, Mutable and Immutable concepts, 2D Arrays: Wave Print, Spiral Print, and Transpose","co":"1","sessions":5},{"srNo":3,"content":"Recursion :Factorial, Fibonacci, isArraySorted, SumofArray, Print Numbers \\u2013 1) Increasing Order 2) Decreasing Order, MergeSort, Subsequence, Rat in Maze, N_Stairs, Subset Sum","co":"1","sessions":8},{"srNo":4,"content":"Stack :stack implementation Queue implementation , Linkedlist implementation(Add and Delete), Mid (Cycle detection hints) Reverse LinkedList ,Merge two Sorted LinkedList, Intersection of two LinkedList","co":"2","sessions":3},{"srNo":5,"content":"Binary Tree implementation and traversal of binary tree(PreOrder , InOrder and PostOrder), DIameter-O(N^2) and O(N) height , count number of node, Level-Order , Create Tree using Pre and Inorder, Create Tree using level-order","co":"2","sessions":4},{"srNo":6,"content":"Binary Search Tree implementation , Addition and Deletion, BST to LinkedList, Balanced binary Tree, Valid BST, priority queue Collections , Kth Samllest, Meeting Room-2 Merge k Sorted List, Map and Set Collections( HashMap TreeMap and LinkedHashMap) SubArray using Map related Question","co":"3","sessions":5},{"srNo":7,"content":"Dynamic Programming:- Fib, min Steps to one, coin Changes, ,LCS, LIS, knapsack Edit Distance, Graph basic , BFS, DFS,Dijkstra, MST(Prims) bipartite","co":"3","sessions":4}],"studentListData":[],"weakStudentsData":[],"marksDetailsData":[],"attendanceReportData":[]}]